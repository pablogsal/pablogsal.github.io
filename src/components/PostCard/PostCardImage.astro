---
import { type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// components
import Tag from "@components/Tag/Tag.astro";

// utils
import { formatDate, humanize } from "@js/textUtils";
import { getAllAuthorsData } from "@js/blogUtils";

interface Props {
  post: CollectionEntry<"blog">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;
const { title, description, tags, authors, pubDate, heroImage } = post.data;

const authorsData = await getAllAuthorsData(authors);
---

<article class=`flex flex-col ${className}` {...rest}>
  <a
    href={`/blog/${post.slug}/`}
    class="shrink-0 justify-center overflow-hidden sm:justify-normal"
  >
    <figure>
      <Image
        src={heroImage}
        alt={`Cover for ${title}`}
        height={700}
        quality="high"
        class="h-auto max-h-96 w-full object-cover transition-all duration-500"
      />
    </figure>
  </a>
  <div class="w-full">
    <div class="flex flex-wrap items-center justify-between gap-x-4 gap-y-1">
      <!-- tags -->
      <div class="mt-1 flex flex-wrap gap-4">
        {tags.map((tag) => <Tag {tag} />)}
      </div>
      <!-- published date -->
      <time
        datetime={pubDate.toISOString()}
        class="description whitespace-nowrap"
      >
        {formatDate(pubDate)}
      </time>
    </div>

    <!-- title -->
    <div class="group mt-2">
      <a
        class="underline-ltr text-base font-medium md:text-lg/tight"
        href={`/blog/${post.slug}/`}
      >
        {title}
      </a>
    </div>

    <!-- description -->
    {
      showDescription && (
        <p class="description mt-1 text-sm lg:text-base">{description}</p>
      )
    }
  </div>
</article>
